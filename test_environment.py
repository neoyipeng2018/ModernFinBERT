#!/usr/bin/env python3
"""
Test script to verify the ModernFinBERT environment is working correctly.
This tests the core functionality needed by Data.ipynb.
"""

import sys
print(f"Python version: {sys.version}")

# Test core imports from the notebook
try:
    import numpy as np
    print("‚úÖ numpy imported successfully")
    
    from datasets import load_dataset
    print("‚úÖ datasets imported successfully")
    
    import pandas as pd
    print("‚úÖ pandas imported successfully")
    
    import matplotlib.pyplot as plt
    print("‚úÖ matplotlib imported successfully")
    
    import torch
    print("‚úÖ torch imported successfully")
    
    import transformers
    print("‚úÖ transformers imported successfully")
    
    from huggingface_hub import HfApi
    print("‚úÖ huggingface_hub imported successfully")
    
except ImportError as e:
    print(f"‚ùå Import error: {e}")
    sys.exit(1)

# Test basic functionality
print("\n=== Testing basic functionality ===")

# Test numpy
NUM_CLASSES = 3
label_dict = {'NEUTRAL/MIXED': 1, 'NEGATIVE': 0, 'POSITIVE': 2}
test_labels = np.eye(NUM_CLASSES)[label_dict['POSITIVE']]
print(f"‚úÖ Numpy one-hot encoding works: {test_labels}")

# Test dataset loading (just check connection, don't download full dataset)
try:
    print("‚úÖ Testing HuggingFace connection...")
    # This will just check if we can connect to HF hub
    from huggingface_hub import list_models
    models = list(list_models(limit=1))
    print("‚úÖ HuggingFace Hub connection successful")
except Exception as e:
    print(f"‚ö†Ô∏è  HuggingFace connection warning: {e}")

# Test torch
print(f"‚úÖ PyTorch version: {torch.__version__}")
print(f"‚úÖ PyTorch MPS available: {torch.backends.mps.is_available()}")
print(f"‚úÖ PyTorch MPS built: {torch.backends.mps.is_built()}")

print("\n=== Environment Test Complete ===")
print("üéâ Your environment is ready for Data.ipynb!")
print("\nTo activate this environment in the future:")
print("  source venv/bin/activate")
print("\nTo run Jupyter:")
print("  source venv/bin/activate && jupyter notebook")